<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ㅇㅇㅈ Blog</title>
    <link>https://sacultang.github.io/</link>
    
    <atom:link href="https://sacultang.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Fri, 29 Apr 2022 14:47:47 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>2022-04-29 TIL</title>
      <link>https://sacultang.github.io/2022/04/29/2022-04-29-TIL/</link>
      <guid>https://sacultang.github.io/2022/04/29/2022-04-29-TIL/</guid>
      <pubDate>Fri, 29 Apr 2022 14:43:21 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Array-reduce&quot;&gt;&lt;a href=&quot;#Array-reduce&quot; class=&quot;headerlink&quot; title=&quot;Array.reduce()&quot;&gt;&lt;/a&gt;Array.reduce()&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;배열의 각 요소에 대해 </description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Array-reduce"><a href="#Array-reduce" class="headerlink" title="Array.reduce()"></a>Array.reduce()</h2><blockquote><p>배열의 각 요소에 대해 주어진 리듀서(reducer)함수를 실행하고, 하나의 결과값을 반환한다</p></blockquote><p>말이 어렵다..</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">reduce</span>(callback[, initialValue])</span><br></pre></td></tr></table></figure><h3 id="reduce-의-콜백-함수는-4가지-인수를-받는다"><a href="#reduce-의-콜백-함수는-4가지-인수를-받는다" class="headerlink" title="reduce()의 콜백 함수는 4가지 인수를 받는다"></a>reduce()의 콜백 함수는 4가지 인수를 받는다</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. accumulator</span><br><span class="line">    - 누산기, 콜백의 반환값을 누적시킨다. initialValue를 제공했을때는 initialValue의 값이다</span><br><span class="line">2. currentValue</span><br><span class="line">  - 처리할 현재 요소</span><br><span class="line">3. currentIndex (optional)</span><br><span class="line">    - 처리할 현재 요소의 인덱스 </span><br><span class="line">4. array (optional)</span><br><span class="line">  - reduce()를 호출한 배열</span><br></pre></td></tr></table></figure><h3 id="사용-방법"><a href="#사용-방법" class="headerlink" title="사용 방법"></a>사용 방법</h3><p>reduce()에는 누산기가 포함되어 있기 때문에, 배열의 각 요소에 대해 함수를 실행하고 누적된 값을 출력할때 용이하다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = numbers.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur, idx</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> acc + cur </span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result) <span class="comment">// 15</span></span><br></pre></td></tr></table></figure><p>예제에서 initialValue 를 0 으로 주었기 때문에 초기값이 0부터 시작해서 하나씩 누적 시켜 나간다<br>0+1+2+3+4+5 &#x3D; 15</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = numbers.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur, idx</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> acc + cur </span><br><span class="line">&#125;,<span class="number">10</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result) <span class="comment">// 25</span></span><br></pre></td></tr></table></figure><p>initialValue 를 10 으로 주었기 때문에 초기값이 10부터 시작해서 하나씩 누적 시켜 나간다<br>10+1+2+3+4+5 &#x3D; 15</p><p>reduce()로 많은 것을 할 수 있다는데.. 아직 더해서 누적 시키는 정도 밖에 이해가 되질 않는다</p>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/TIL/">TIL</category>
      
      <category domain="https://sacultang.github.io/categories/Web/TIL/2022-04/">2022.04</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://sacultang.github.io/2022/04/29/2022-04-29-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>없는 숫자 더하기</title>
      <link>https://sacultang.github.io/2022/04/29/%EC%97%86%EB%8A%94-%EC%88%AB%EC%9E%90-%EB%8D%94%ED%95%98%EA%B8%B0/</link>
      <guid>https://sacultang.github.io/2022/04/29/%EC%97%86%EB%8A%94-%EC%88%AB%EC%9E%90-%EB%8D%94%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 29 Apr 2022 14:02:03 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;없는-숫자-더하기&quot;&gt;&lt;a href=&quot;#없는-숫자-더하기&quot; class=&quot;headerlink&quot; title=&quot;없는 숫자 더하기&quot;&gt;&lt;/a&gt;없는 숫자 더하기&lt;/h1&gt;&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="없는-숫자-더하기"><a href="#없는-숫자-더하기" class="headerlink" title="없는 숫자 더하기"></a>없는 숫자 더하기</h1><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><blockquote><p>0부터 9까지의 숫자 중 일부가 들어있는 정수 배열 numbers가 매개변수로 주어집니다. <br><br>numbers에서 찾을 수 없는 0부터 9까지의 숫자를 모두 찾아 더한 수를 return 하도록 solution 함수를 완성해주세요.</p></blockquote><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>1 ≤ numbers의 길이 ≤ 9<ul><li>0 ≤ numbers의 모든 원소 ≤ 9</li><li>numbers의 모든 원소는 서로 다릅니다.</li></ul></li></ul><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">numbers</th><th align="center">result</th></tr></thead><tbody><tr><td align="center">[1,2,3,4,6,7,8,0]</td><td align="center">14</td></tr><tr><td align="center">[5,8,4,0,6,7,9]</td><td align="center">6</td></tr></tbody></table><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><ul><li><p>입출력 예 #1</p><ul><li>5, 9가 numbers에 없으므로, 5 + 9 &#x3D; 14를 return 해야 합니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>1, 2, 3이 numbers에 없으므로, 1 + 2 + 3 &#x3D; 6을 return 해야 합니다.</li></ul></li></ul><h2 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h2><ol><li>0부터 9까지의 합을 구한다</li><li>주어진 numbers의 합을 구한다</li><li>0부터 9까지의 합에서 numbers의 합을 뺀다</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">solution</span>(<span class="params">numbers</span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> allSum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> numbSum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i &lt;=<span class="number">9</span>; i++)&#123;</span><br><span class="line">    allSum += i</span><br><span class="line">  &#125;</span><br><span class="line">  numbers.<span class="title function_">forEach</span>(<span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">    numbSum += el</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> allSum - numbSum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="다른-사람의-풀이를-보자"><a href="#다른-사람의-풀이를-보자" class="headerlink" title="다른 사람의 풀이를 보자.."></a>다른 사람의 풀이를 보자..</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">solution</span>(<span class="params">numbers</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">45</span> - numbers.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> acc + cur, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>깔끔쓰..<br>0부터9까지합 로직은 그렇다 쳐도<br>reduce는 생각도 못했다</p><p>reduce()에 대해 알아보자..</p><h2 id="Array-reduce"><a href="#Array-reduce" class="headerlink" title="Array.reduce()"></a>Array.reduce()</h2><blockquote><p>배열의 각 요소에 대해 주어진 리듀서(reducer)함수를 실행하고, 하나의 결과값을 반환한다</p></blockquote><p>말이 어렵다..</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">reduce</span>(callback[, initialValue])</span><br></pre></td></tr></table></figure><h3 id="사용-방법"><a href="#사용-방법" class="headerlink" title="사용 방법"></a>사용 방법</h3><p>reduce()에는 누산기가 포함되어 있기 때문에, 배열의 각 요소에 대해 함수를 실행하고 누적된 값을 출력할때 용이하다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = numbers.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur, idx</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> acc + cur </span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result) <span class="comment">// 15</span></span><br></pre></td></tr></table></figure><p>예제에서 initialValue 를 0 으로 주었기 때문에 초기값이 0부터 시작해서 하나씩 누적 시켜 나간다<br>0+1+2+3+4+5 &#x3D; 15</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> result = numbers.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur, idx</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> acc + cur </span><br><span class="line">&#125;,<span class="number">10</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result) <span class="comment">// 25</span></span><br></pre></td></tr></table></figure><p>initialValue 를 10 으로 주었기 때문에 초기값이 10부터 시작해서 하나씩 누적 시켜 나간다<br>10+1+2+3+4+5 &#x3D; 15</p><h3 id="reduce-의-콜백-함수는-4가지-인수를-받는다"><a href="#reduce-의-콜백-함수는-4가지-인수를-받는다" class="headerlink" title="reduce()의 콜백 함수는 4가지 인수를 받는다"></a>reduce()의 콜백 함수는 4가지 인수를 받는다</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. accumulator</span><br><span class="line">    - 누산기, 콜백의 반환값을 누적시킨다. initialValue를 제공했을때는 initialValue의 값이다</span><br><span class="line">2. currentValue</span><br><span class="line">  - 처리할 현재 요소</span><br><span class="line">3. currentIndex (optional)</span><br><span class="line">    - 처리할 현재 요소의 인덱스 </span><br><span class="line">4. array (optional)</span><br><span class="line">  - reduce()를 호출한 배열</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/algorithm/">algorithm</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/algorithm/">algorithm</category>
      
      
      <comments>https://sacultang.github.io/2022/04/29/%EC%97%86%EB%8A%94-%EC%88%AB%EC%9E%90-%EB%8D%94%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>React 기초</title>
      <link>https://sacultang.github.io/2022/04/28/React-%EA%B8%B0%EC%B4%88/</link>
      <guid>https://sacultang.github.io/2022/04/28/React-%EA%B8%B0%EC%B4%88/</guid>
      <pubDate>Thu, 28 Apr 2022 08:34:20 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;React&quot;&gt;&lt;a href=&quot;#React&quot; class=&quot;headerlink&quot; title=&quot;React&quot;&gt;&lt;/a&gt;React&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;유저 인터페이스를 만들기위한 자바스크립트 라이브러리(library)&lt;/li&gt;
&lt;li&gt;Component based Development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h2&gt;&lt;p&gt;Component Tree &amp;#x3D;&amp;gt; DOM Tree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOM과는 다르게 Component 내장되어 있는 태그들을 조합하고 스타일,동작등을 한 번에 다루는 형태를 만든 다음 재활용하는 방식&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Virtual-DOM&quot;&gt;&lt;a href=&quot;#Virtual-DOM&quot; class=&quot;headerlink&quot; title=&quot;Virtual DOM ?&quot;&gt;&lt;/a&gt;Virtual DOM ?&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DOM을 직접 제어하는 경우&lt;ul&gt;
&lt;li&gt;바뀐 부분만 정확히 바꿔야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DOM을 직접 제어하지 않는 경우&lt;ul&gt;
&lt;li&gt;가상의 돔 트리를 사용해서 이정 상태와 이후 상태를 비교하여, 바뀐 부분을 찾아내서 자동으로 바꾼다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;CSR(React Client Side Rendering)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행되기 전까지는 화면이 보이지 않음.&lt;/li&gt;
&lt;li&gt;JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행된 후, 화면이 보이면서 유저가 인터렉션 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;SSR(React Server Side Rendering)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS가 전부 다운로드 되지 않아도, 일단 화면은 보이지만 유저가 사용 할 수 없음.&lt;/li&gt;
&lt;li&gt;JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행된 후, 유저가 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="React"><a href="#React" class="headerlink" title="React"></a>React</h1><ul><li>유저 인터페이스를 만들기위한 자바스크립트 라이브러리(library)</li><li>Component based Development</li></ul><h2 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h2><p>Component Tree &#x3D;&gt; DOM Tree</p><ul><li>DOM과는 다르게 Component 내장되어 있는 태그들을 조합하고 스타일,동작등을 한 번에 다루는 형태를 만든 다음 재활용하는 방식</li></ul><h3 id="Virtual-DOM"><a href="#Virtual-DOM" class="headerlink" title="Virtual DOM ?"></a>Virtual DOM ?</h3><ul><li>DOM을 직접 제어하는 경우<ul><li>바뀐 부분만 정확히 바꿔야 한다.</li></ul></li><li>DOM을 직접 제어하지 않는 경우<ul><li>가상의 돔 트리를 사용해서 이정 상태와 이후 상태를 비교하여, 바뀐 부분을 찾아내서 자동으로 바꾼다</li></ul></li></ul><blockquote><p>CSR(React Client Side Rendering)</p><ul><li>JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행되기 전까지는 화면이 보이지 않음.</li><li>JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행된 후, 화면이 보이면서 유저가 인터렉션 가능</li></ul></blockquote><blockquote><p>SSR(React Server Side Rendering)</p><ul><li>JS가 전부 다운로드 되지 않아도, 일단 화면은 보이지만 유저가 사용 할 수 없음.</li><li>JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행된 후, 유저가 사용 가능</li></ul></blockquote><span id="more"></span><h3 id="리액트가-하는-일"><a href="#리액트가-하는-일" class="headerlink" title="리액트가 하는 일"></a>리액트가 하는 일</h3><p>리액트의 핵심 모듈 2개로 리액트가 하는 일 알아보기</p><blockquote><p>만들어진 리액트 컴포넌트를 실제 HTMLElement에 연결할 때 ReactDOM 라이브러리를 이용한다</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 리액트 컴포넌트 =&gt; HTMLElement 연결하기</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 리액트 컴포넌트 만들기</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Hooks-이전"><a href="#Hooks-이전" class="headerlink" title="Hooks 이전"></a>Hooks 이전</h3><p>Hook이라는 기술이 나오기 전까지와 나온 후의 컴포넌트 작성법의 기준이 다르다</p><ul><li>컴포넌트 내부에 상태가 있다면?<ul><li>class</li></ul></li><li>컴포넌트 내부에 상태가 없다면?<ul><li>라이프사이클을 사용해야 한다면?<ul><li>class</li></ul></li><li>라이프사이클에 관계 없다면?<ul><li>function</li></ul></li></ul></li></ul><h3 id="Hooks-이후"><a href="#Hooks-이후" class="headerlink" title="Hooks 이후"></a>Hooks 이후</h3><ul><li>class<ul><li>React안의 Component 클래스를 상속받아 사용한다</li><li>render() 함수를 사용해야 한다</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 정의</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ClassComponent</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="comment">// React안의 Component 클래스를 상속 받는다</span></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// class 컴포넌트는 render() 메소드를 꼭 정의 해야 한다</span></span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* prettier-ignore */</span></span><br><span class="line"><span class="comment">// 사용</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>( <span class="comment">// 첫번째인자 &lt;컴포넌트&gt;, 두번째 사용될 곳</span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ClassComponent</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>function</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 정의 1</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FunctionComponent</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 정의 2</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">FunctionComponent</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 사용</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">FunctionComponent</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="React-createElement로-컴포넌트-만들기"><a href="#React-createElement로-컴포넌트-만들기" class="headerlink" title="React.createElement로 컴포넌트 만들기"></a>React.createElement로 컴포넌트 만들기</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">  첫 번째 인자 : type, <span class="comment">// 태그 이름 문자열 | 리액트 컴포넌트 | React.Fragment,</span></span><br><span class="line">  두 번째 인자 : [props], <span class="comment">// 리액트 컴포넌트에 넣어주는 데이터 객체</span></span><br><span class="line">  세 번째 인자 : [...children] <span class="comment">// 자식으로 넣어주는 요소들 (여러개 가능)</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// type 1. 태그 이름 문자열</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="title class_">React</span>.<span class="title function_">createElement</span>( <span class="comment">// React.createElement = Component생성</span></span><br><span class="line">    <span class="string">&#x27;h1&#x27;</span>,</span><br><span class="line">    <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;`type 이 &quot;태그 이름 문자열&quot; 입니다.`&#x27;</span></span><br><span class="line">  ),</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// type 2. 리액트 컴포넌트</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Component</span> = (<span class="params"></span>) =&gt; &#123; <span class="comment">// 컴포넌트 생성</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">    <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;null&#x27;</span>,</span><br><span class="line">    <span class="string">`type 이 &quot;React 컴포넌트&quot; 입니다.`</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="title class_">React</span>.<span class="title function_">createElement</span>(<span class="title class_">Component</span>,<span class="literal">null</span>,<span class="literal">null</span>), <span class="comment">// 첫 번째 인자로 컴포넌트를 넣어준다</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// type 3. React.Fragment</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">    <span class="title class_">React</span>.<span class="property">Fragment</span>,</span><br><span class="line">    <span class="literal">null</span>,</span><br><span class="line">    <span class="string">`type이 &quot;React Fragment&quot; 입니다.`</span></span><br><span class="line">    <span class="string">`type이 &quot;React Fragment&quot; 입니다.`</span></span><br><span class="line">    <span class="string">`type이 &quot;React Fragment&quot; 입니다.`</span></span><br><span class="line">  ),</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 복잡한 리액트 엘리먼트 모임</span></span><br><span class="line"><span class="comment">// createElement로 만들기에는 어려움이 있다</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">    <span class="string">&#x27;div&#x27;</span>,</span><br><span class="line">    <span class="literal">null</span>,</span><br><span class="line">    <span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">      <span class="string">&#x27;div&#x27;</span>,</span><br><span class="line">      <span class="literal">null</span>,</span><br><span class="line">      <span class="title class_">React</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;h1&#x27;</span>, <span class="literal">null</span>, <span class="string">&#x27;주제&#x27;</span>),</span><br><span class="line">      <span class="title class_">React</span>.<span class="title function_">createElement</span>(</span><br><span class="line">        <span class="string">&#x27;ul&#x27;</span>,</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">        <span class="title class_">React</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>, <span class="literal">null</span>, <span class="string">&#x27;React&#x27;</span>),</span><br><span class="line">        <span class="title class_">React</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>, <span class="literal">null</span>, <span class="string">&#x27;vue&#x27;</span>)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  ),</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>JSX 문법으로 작성된 코드는 순수한 JavaScript로 컴파일 하여 사용한다.<br>&#x3D;&gt; babel</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">a</span>=<span class="string">&#x27;a&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    // Type부분</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      // children 부분</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>주제<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>React<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment">// babel로 순수한 Javascript로 컴파일 해준다</span></span><br></pre></td></tr></table></figure><h2 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h2><ul><li>가독성이 좋다</li><li>babel과 같은 컴파일 과정에서 문법적 오류를 인지하기 쉬움</li></ul><h3 id="JSX-문법"><a href="#JSX-문법" class="headerlink" title="JSX 문법"></a>JSX 문법</h3><ul><li>최상위 요소가 하나여야 한다.</li><li>최상위 요소 리턴하는 경우, ()로 감싸야 한다</li><li>자식들을 바로 렌더링 하고 싶으면,&lt;&gt;자식들&lt;&#x2F;&gt;를 사용한다 &#x3D;&gt; Fragment</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">    // 최상위 요소로 사용 할 수 있다</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>주제<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>제목<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>자바스크립트 표현식을 사용하려면, {표현식}을 이용한다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> title = <span class="string">&#x27;주제&#x27;</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;title&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>if 문은 사용할 수 없다<ul><li>삼항연산자 혹은 &amp;&amp;을 사용한다</li></ul></li><li>style을 이용해 인라인 스타일링이 가능하다</li><li>class 대신 className을 사용해 class를 적용할 수 있다</li><li>자식요소가 있으면, 꼭 닫아야 하고, 자식요소가 없으면 열면서 닫아야 한다<ul><li>&lt;p&gt;hello&lt;&#x2F;p&gt;</li><li>&lt;br&#x2F;&gt;</li></ul></li></ul><h2 id="Props와-State"><a href="#Props와-State" class="headerlink" title="Props와 State"></a>Props와 State</h2><ul><li>Props는 컴포넌트 외부에서 컴포넌트에게 주는 데이터.</li><li>State는 컴포넌트 내부에서 변경할 수 있는 데이터.</li><li>둘 다 변경이 발생하면, 렌더가 다시 일어날 수 있다</li></ul><h3 id="Render-함수"><a href="#Render-함수" class="headerlink" title="Render 함수"></a>Render 함수</h3><ul><li>Props와 State를 바탕으로 컴포넌트를 그린다</li><li>Props와 State가 변경되면, 컴포넌트를 다시 그린다</li><li>컴포넌트를 그리는 방법을 기술하는 함수가 렌더 함수</li></ul><h3 id="Props"><a href="#Props" class="headerlink" title="Props"></a>Props</h3><p>함수로 만든 컴포넌트</p><ul><li>props는 컴포넌트의 인자로 받는다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#123;message: &#x27;안녕하세요&#x27;&#125;의 형태로 props에 들어오게 된다.</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Component</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;props.message&#125; 이것은 함수로 만든 컴포넌트 입니다.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Component</span> <span class="attr">message</span>=<span class="string">&#x27;안녕하세요&#x27;</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>클래스로 만든 컴포넌트</p><ul><li>클래스 컴포넌트에서는 this로 props를 받는다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Component</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;this.props.message&#125; 이것은 클래스로 만든 컴포넌트 입니다.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Component</span> <span class="attr">message</span>=<span class="string">&#x27;안녕하세요!!&#x27;</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="defaultProps"><a href="#defaultProps" class="headerlink" title="defaultProps"></a>defaultProps</h3><ul><li>props의 기본값을 쓰고 싶을때</li><li>직접 지정하면 지정한 값이 들어간다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Component</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;this.props.message&#125; 이것은 클래스로 만든 컴포넌트 입니다.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">    <span class="comment">// 클래스 문법을 이용한 방법</span></span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;클래스 컴포넌트에서만 쓸수있다&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Component</span>.<span class="property">defaultProps</span> = &#123;</span><br><span class="line">  <span class="comment">// 클래스 컴포넌트 와 함수 컴포넌트 모두 사용 할 수 있다</span></span><br><span class="line">  <span class="attr">message</span>: <span class="string">&#x27;기본값&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Component</span> /&gt;</span></span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="State"><a href="#State" class="headerlink" title="State"></a>State</h3><ul><li>state는 객체여야한다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 클래스 컴포넌트에서 state 사용법</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Component</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="comment">// 방법 1</span></span><br><span class="line">  state = &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 방법 2</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;this.props.message&#125; 이것은 클래스로 만든 컴포넌트 입니다.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Event-Hnadling"><a href="#Event-Hnadling" class="headerlink" title="Event Hnadling"></a>Event Hnadling</h3><ul><li>HTML DOM에 클릭하면 이벤트가 발생하고, 발생하면 그에 맞는 변경이 일어나도록 해야한다</li><li>JSX에 이벤트를 설정할 수 있다.</li><li>camelCase 로만 사용할 수 있다<ul><li>onClick, onMouseEnter</li></ul></li><li>이벤트에 연결된 자바스크립트 코드는 함수이다<ul><li>이벤트 &#x3D; {함수}와 같이 쓴다</li></ul></li><li>실제 DOM 요소들에만 사용 가능하다<ul><li>리액트 컴포넌트에 사용하면, 그냥 Props로 전달한다</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 인라인으로 이벤트 핸들링</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Comp</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;this.state.count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            // camelCase로 이벤트 작성해줘야 한다</span></span><br><span class="line"><span class="language-xml">            this.setState((state) =&gt; (&#123;</span></span><br><span class="line"><span class="language-xml">              ...state,</span></span><br><span class="line"><span class="language-xml">              count: state.count + 1,</span></span><br><span class="line"><span class="language-xml">            &#125;))</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          클릭</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Comp</span> /&gt;</span></span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 메소드를 따로 빼줬을때</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Comp</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;this.state.count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.click&#125;</span>&gt;</span>클릭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  click = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> (&#123;</span><br><span class="line">      ...state,</span><br><span class="line">      <span class="attr">count</span>: state.<span class="property">count</span> + <span class="number">1</span>,</span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Comp</span> /&gt;</span></span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#root&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="Component-Lifecycle"><a href="#Component-Lifecycle" class="headerlink" title="Component Lifecycle"></a>Component Lifecycle</h2><p>리액트 컴포넌트는 탄생부터 죽음까지 여러지점에서 개발자가 작업이 가능하도록 메서드를 오버라이딩 할 수 있게 해준다.<br>v16.3 이전과 이후로 몇 개의 메서드가 이름이 달라졌다</p><h3 id="Initialization"><a href="#Initialization" class="headerlink" title="Initialization"></a>Initialization</h3><pre><code>- setup props and state</code></pre><h3 id="Mounting"><a href="#Mounting" class="headerlink" title="Mounting"></a>Mounting</h3><pre><code>1. v16.3 이전: componentWillMount =&gt; v16.3 이후: static getDerivedStateFromProps(nextProps, prevState),2. render (최초로 브라우저에 그려짐)3. componentDidMount</code></pre><h3 id="Updation-props가-바뀌거나-state가-바뀌는-것"><a href="#Updation-props가-바뀌거나-state가-바뀌는-것" class="headerlink" title="Updation - props가 바뀌거나 state가 바뀌는 것"></a>Updation - props가 바뀌거나 state가 바뀌는 것</h3><ul><li><p>props</p><pre><code>  1. v16.3 이전: componentWillReceiveProps - props일 경우에만 붙는다  =&gt; v16.3 이후: getDerivedStateFromProps  2. shouldComponentUpdate - 컴포넌트가 업데이트 되어야 하는지 아닌지 결정하는 구간 true,false, 불필요하게 렌더되는걸 방지하기 위해 필요하다  3. v16.3 이전: componentWillUpdate =&gt;  v16.3 이후: getSnapshotBeforeUpdate  4. render  5. componentDidUpdate</code></pre></li><li><p>state</p><pre><code>  1. shouldComponentUpdate  2. v16.3 이전: componentWillUpdate =&gt;  v16.3 이후: getSnapshotBeforeUpdate  3. render  4. componentDidUpdate</code></pre></li></ul><h3 id="Unmounting"><a href="#Unmounting" class="headerlink" title="Unmounting"></a>Unmounting</h3><pre><code>- componentWillUnmount</code></pre>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/React/">React</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/React/">React</category>
      
      
      <comments>https://sacultang.github.io/2022/04/28/React-%EA%B8%B0%EC%B4%88/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JS-ImageSlider</title>
      <link>https://sacultang.github.io/2022/04/27/JS-ImageSlider/</link>
      <guid>https://sacultang.github.io/2022/04/27/JS-ImageSlider/</guid>
      <pubDate>Wed, 27 Apr 2022 11:50:55 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;무한-루프-이미지-슬라이더&quot;&gt;&lt;a href=&quot;#무한-루프-이미지-슬라이더&quot; class=&quot;headerlink&quot; title=&quot;무한 루프 이미지 슬라이더&quot;&gt;&lt;/a&gt;무한 루프 이미지 슬라이더&lt;/h1&gt;&lt;h2 id=&quot;이미지-슬라이더에-대한-이해&quot;&gt;&lt;a href=&quot;#이미지-슬라이더에-대한-이해&quot; class=&quot;headerlink&quot; title=&quot;이미지 슬라이더에 대한 이해&quot;&gt;&lt;/a&gt;이미지 슬라이더에 대한 이해&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;이미지가 실제 보이는 div가 있다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;그 안에 ul로 감싸진 실제 이미지들(li)이 일렬로 정렬되어 있다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ul의 포지션이 움직이면서 다음이나 전의 이미지가 보여진다&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/./images/slide_img1.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;HTML-구조&quot;&gt;&lt;a href=&quot;#HTML-구조&quot; class=&quot;headerlink&quot; title=&quot;HTML 구조&quot;&gt;&lt;/a&gt;HTML 구조&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;kind_wrap&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;kind_slider&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;slider&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://via.placeholder.com/800x200.png?text=A&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://via.placeholder.com/800x200.png?text=B&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://via.placeholder.com/800x200.png?text=C&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://via.placeholder.com/800x200.png?text=D&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;arrow&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;prev&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;이전&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;next&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;다음&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;style&quot;&gt;&lt;a href=&quot;#style&quot; class=&quot;headerlink&quot; title=&quot;style&quot;&gt;&lt;/a&gt;style&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;list-style&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt; solid black;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;800px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-class&quot;&gt;.kind_slider&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-class&quot;&gt;.kind_slider&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.slider&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-class&quot;&gt;.kind_slider&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.slider&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;li&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;: left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-class&quot;&gt;.kind_slider&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;: top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.arrow&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.prev&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.kind_wrap&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.arrow&lt;/span&gt; &amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.next&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="무한-루프-이미지-슬라이더"><a href="#무한-루프-이미지-슬라이더" class="headerlink" title="무한 루프 이미지 슬라이더"></a>무한 루프 이미지 슬라이더</h1><h2 id="이미지-슬라이더에-대한-이해"><a href="#이미지-슬라이더에-대한-이해" class="headerlink" title="이미지 슬라이더에 대한 이해"></a>이미지 슬라이더에 대한 이해</h2><ol><li><p>이미지가 실제 보이는 div가 있다</p></li><li><p>그 안에 ul로 감싸진 실제 이미지들(li)이 일렬로 정렬되어 있다</p></li><li><p>ul의 포지션이 움직이면서 다음이나 전의 이미지가 보여진다</p><p><img src="/./images/slide_img1.png"></p></li></ol><h2 id="HTML-구조"><a href="#HTML-구조" class="headerlink" title="HTML 구조"></a>HTML 구조</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;kind_wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;kind_slider&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://via.placeholder.com/800x200.png?text=A&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://via.placeholder.com/800x200.png?text=B&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://via.placeholder.com/800x200.png?text=C&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://via.placeholder.com/800x200.png?text=D&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span>이전<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span>다음<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="style"><a href="#style" class="headerlink" title="style"></a>style</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> &gt; <span class="selector-class">.kind_slider</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> &gt; <span class="selector-class">.kind_slider</span> <span class="selector-class">.slider</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> &gt; <span class="selector-class">.kind_slider</span> <span class="selector-class">.slider</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> &gt; <span class="selector-class">.kind_slider</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> <span class="selector-class">.arrow</span> &gt; <span class="selector-tag">a</span><span class="selector-class">.prev</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.kind_wrap</span> <span class="selector-class">.arrow</span> &gt; <span class="selector-tag">a</span><span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><ul><li>실제 보여지는 화면인 div.kind_wrap에만 최대 넓이 값이 들어있고<br>ul 이나 li에는 사이즈가 없다</li><li>ul의 width 값은 이미지(li)의 갯수에 의해 정해진다 (ul의 width값이 변할수 있다)</li><li>이미지(li)의 사이즈 역시 변할수 있다</li><li>자바스크립트에서 li의 사이즈를 구하고 li의 갯수만큼 ul의 사이즈를 구해서 스타일에 넣어준다</li></ul><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><ol><li>각 노드들을 가져온다</li><li>li의 width 값을 구해준다</li><li>li의 갯수만큼 ul의 width값도 구해준다</li><li>ul의 width 값을 설정해 준다</li></ol><h3 id="노드-준비"><a href="#노드-준비" class="headerlink" title="노드 준비"></a>노드 준비</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 노드 준비</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>) <span class="comment">// ul</span></span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>) <span class="comment">//li를 배열로 받아온다</span></span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CSSOM 셋업</span></span><br><span class="line"><span class="keyword">const</span> liWidth = slideLis[<span class="number">0</span>].<span class="property">clientWidth</span> <span class="comment">// li 1개의 width</span></span><br><span class="line"><span class="keyword">const</span> sliderWidth = liWidth * slideLis.<span class="property">length</span> <span class="comment">// li의 갯수만큼 width를 곱해준다</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">width</span> = sliderWidth + <span class="string">&#x27;px&#x27;</span> <span class="comment">// ul의 width 설정</span></span><br></pre></td></tr></table></figure><ol start="5"><li>버튼에 클릭 이벤트를 줘서 ul의 포지션을 li의 넓이값만큼 움직여 주면 된다.</li><li>버튼을 각각이 아닌 한번에 가져왔기 때문에 if문으로 구별을 해준다</li></ol><h3 id="클릭-이벤트-추가"><a href="#클릭-이벤트-추가" class="headerlink" title="클릭 이벤트 추가"></a>클릭 이벤트 추가</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 클릭 이벤트</span></span><br><span class="line">arrow.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="property">preventDefault</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;next&#x27;</span>) &#123;</span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">left</span> = <span class="string">`-<span class="subst">$&#123;liWidth&#125;</span>px`</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>이렇게까지 작성하고 나면 다음으로 가는 버튼이 작동하지만 한 번만 작동한다<ul><li>slider의 left값이 계속 liWidth 값으로만 되기 때문이다.. 그래서 버튼을 누를때마다 liWidth 값을 누적시켜줄 필요가 있다</li></ul></li><li>그리고 현재 보고 있는 이미지(li)가 몇 번째 이미지 인지 인덱스 값도 설정 해준다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 노드 준비</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CSSOM 셋업</span></span><br><span class="line"><span class="keyword">const</span> liWidth = slideLis[<span class="number">0</span>].<span class="property">clientWidth</span></span><br><span class="line"><span class="keyword">const</span> sliderWidth = liWidth * slideLis.<span class="property">length</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">width</span> = sliderWidth + <span class="string">&#x27;px&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수를 추가해준다</span></span><br><span class="line"><span class="keyword">let</span> curIndex = <span class="number">0</span> <span class="comment">// 처음 이미지는 0번째 이미지이기 때문에 0으로 초기화</span></span><br><span class="line"><span class="keyword">let</span> moveDist = <span class="number">0</span> <span class="comment">// liWidth 값이 누적될 변수 처음에는 left 값이 0이므로 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 클릭 이벤트</span></span><br><span class="line">arrow.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="property">preventDefault</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;next&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// class가 next인것을 클릭하면</span></span><br><span class="line">    <span class="keyword">if</span> (curIndex === slideLis.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// 만약 현재인덱스가 마지막 이미지라면</span></span><br><span class="line">      curIndex = <span class="number">0</span> <span class="comment">// 인덱스를 다시 0으로 초기화</span></span><br><span class="line">      moveDist = <span class="number">0</span> <span class="comment">// 이미지가 움직인 값 초기화</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span> <span class="comment">// slider에 transform 에 움직인 거리값을 초기화 해준다</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 현재 인덱스가 마지막 이미지가 아니면 (0~2 번째 이미지)</span></span><br><span class="line">      moveDist += -liWidth <span class="comment">// 움직일 거리를 누적시켜준다 이때 이미지는 왼쪽으로 이동하므로 -값이 된다</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span> <span class="comment">// 누적거리를 transform에 적용</span></span><br><span class="line">      curIndex++ <span class="comment">// 인덱스를 1 증가시켜준다</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>넥스트 버튼을 눌렀을때 현재 인덱스가 몇 번째인지에 따라 동작을 추가해준다</li><li>curIndex는 0부터 시작해서 마지막 이미지에 가면 3가 된다</li><li>slideLis의 갯수는 4개 이므로 -1을 해줘야 마지막 숫자가 동일해진다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 노드 준비</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CSSOM 셋업</span></span><br><span class="line"><span class="keyword">const</span> liWidth = slideLis[<span class="number">0</span>].<span class="property">clientWidth</span></span><br><span class="line"><span class="keyword">const</span> sliderWidth = liWidth * slideLis.<span class="property">length</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">width</span> = sliderWidth + <span class="string">&#x27;px&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수 초기화</span></span><br><span class="line"><span class="keyword">let</span> curIndex = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> moveDist = <span class="number">0</span></span><br><span class="line"><span class="keyword">const</span> speedTime = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 클릭 이벤트</span></span><br><span class="line">arrow.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="property">preventDefault</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// next button</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;next&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (curIndex === slideLis.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">      curIndex = <span class="number">0</span></span><br><span class="line">      moveDist = <span class="number">0</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      moveDist += -liWidth</span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">`all <span class="subst">$&#123;speedTime&#125;</span>ms ease`</span> <span class="comment">// 이미지가 옆으로 넘어가는 것을 보여주기 위해 transition 속성을 사용한다</span></span><br><span class="line">      curIndex++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// prev button</span></span><br><span class="line">  <span class="comment">// class 가 next가 아닌것을 클릭하면</span></span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (curIndex === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 현재 인덱스가 0이라면 마지막 이미지로 넘어가야한다</span></span><br><span class="line">      curIndex = slideLis.<span class="property">length</span> - <span class="number">1</span> <span class="comment">// curIndex를 마지막 이미지의 index로 할당</span></span><br><span class="line">      moveDist = -(liWidth * curIndex) <span class="comment">// 마지막 imgage의 left 값이므로 넓이*인덱스값</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span> <span class="comment">// transform 에 실제 적용해주고</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">`all <span class="subst">$&#123;speedTime&#125;</span>ms ease`</span> <span class="comment">// 넘어가는 효과를 위해 transition 설정</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      moveDist += liWidth <span class="comment">// 이미지가 오른쪽으로 이동해야 하므로 -값이 아닌 +값을 누적시켜준다</span></span><br><span class="line">      slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">      curIndex-- <span class="comment">// 이전 이미지로 이동하므로 인덱스를 1씩 줄여준다</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>이렇게 작성하고 나면 문제점이 하나 생긴다 첫번째 이미지에서 이전을 클릭하거나 마지막 이미지에서 다음을 클릭하면<br>이미지가 역재생(?)되며 돌아간다는 것<br>이걸 자연스럽게 해주기 위해 트릭을 써야한다<br> 첫 번째 이미지와 맨 마지막 이미지를 복제한 후<br><b>1번 앞에는 4번의 복제본을</b><br><b>4번 뒤에는 1번의 복제본을 추가해준다</b><br><img src="/./images/slide_img2.png"></p><p>이 상황에서 4번 이미지일때 다음을 클릭하게 되면 1번 복제본으로 넘어가는 애니메이션 (transition)을 500ms동안 수행한다.<br>그리고나서 수행이 끝나자마자 원본 이미지인 1번 이미지로 위치를 이동 시킨다.</p><h3 id="이미지-클론"><a href="#이미지-클론" class="headerlink" title="이미지 클론"></a>이미지 클론</h3><blockquote><p>첫 번째 이미지는 slideLis[0]으로 직접 지정해 복제해도 상관 없지만,<br>마지막 이미지는 나중에 이미지가 추가 될 경우를 대비해 배열의 길이에서 -1만큼을 뺀 값으로 지정해 복제해준다</p></blockquote><p>inserBefore(‘추가할노드’,’추가 할 위치’)는 ‘추가 할 위치’의 앞 쪽으로 추가하는 메소드<br>appendChild(‘추가할노드’)는 그냥 맨 뒤쪽으로 추가된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 노드 준비</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"><span class="comment">// 1번과 4번을 복제(clone)해준다</span></span><br><span class="line"><span class="keyword">const</span> cloneA = slideLis[<span class="number">0</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">const</span> cloneD = slideLis[slideLis.<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="comment">// 복제한 노드를 원래의 li 앞,뒤로 추가해준다</span></span><br><span class="line">slider.<span class="title function_">insertBefore</span>(cloneD, slideLis[<span class="number">0</span>])</span><br><span class="line">slider.<span class="title function_">appendChild</span>(cloneA)</span><br></pre></td></tr></table></figure><p><img src="/./images/slide_img3.png"></p><p>복제한 이미지를 추가하고 나면 화면이 이렇게 이상해진다..<br>그 이유는 복제해서 넣기전의 넓이 값을 먼저 가지기 때문이다<br>그래서 복제한후의 넓이값을 다시 구해줘야한다!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 노드 준비</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> cloneA = slideLis[<span class="number">0</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">const</span> cloneC = slideLis[slideLis.<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line">slider.<span class="title function_">insertBefore</span>(cloneC, slideLis[<span class="number">0</span>])</span><br><span class="line">slider.<span class="title function_">appendChild</span>(cloneA)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수 초기화</span></span><br><span class="line"><span class="keyword">let</span> curIndex = <span class="number">1</span> <span class="comment">// 복제를 해 넣고나면 처음으로 보여줄 이미지의 인덱스는 1이 된다</span></span><br><span class="line"><span class="keyword">let</span> moveDist = <span class="number">0</span></span><br><span class="line"><span class="keyword">const</span> speedTime = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSSOM 셋업</span></span><br><span class="line"><span class="keyword">const</span> slideCloneLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>) <span class="comment">// 클론 복재후 li들을 다시 변수에 저장한다</span></span><br><span class="line"><span class="keyword">const</span> liWidth = slideLis[<span class="number">0</span>].<span class="property">clientWidth</span></span><br><span class="line"><span class="keyword">const</span> sliderWidth = liWidth * slideCloneLis.<span class="property">length</span> <span class="comment">// 복제한 길이로 ul의 넓이 값을 다시 지정한다</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">width</span> = sliderWidth + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">moveDist = -liWidth <span class="comment">// 첫 번째 이미지가 보여야하므로 -liWidth 값으로 재할당 해준다</span></span><br></pre></td></tr></table></figure><p>setTimeout()을 이용해 마지막 이미지에 가서 버튼을 클릭했을때 transition 효과를 0초로 설정하여<br>넘어가는 이미지효과를 제거한후 이동하는 방식이다</p><h3 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout"></a>setTimeout</h3><ol><li>처음으로 보여줄 이미지가 사실상 두 번째에 있으므로 포지션 초기값을 다시 설정해준다</li><li>버튼을 눌렀을 경우 이미지가 계속 넘어가도록 해준다</li><li>setTimeout()함수로 이미지의 위치를 자연스럽게 교체해준다</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 노드셋업</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cloneA = slideLis[<span class="number">0</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">const</span> cloneC = slideLis[slideLis.<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line">slider.<span class="title function_">insertBefore</span>(cloneC, slideLis[<span class="number">0</span>])</span><br><span class="line">slider.<span class="title function_">appendChild</span>(cloneA)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수 초기화</span></span><br><span class="line"><span class="keyword">let</span> curIndex = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> moveDist = <span class="number">0</span></span><br><span class="line"><span class="keyword">const</span> speedTime = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSSOM 셋업</span></span><br><span class="line"><span class="keyword">const</span> slideCloneLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> liWidth = slideLis[<span class="number">0</span>].<span class="property">clientWidth</span></span><br><span class="line"><span class="keyword">const</span> sliderWidth = liWidth * slideCloneLis.<span class="property">length</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">width</span> = sliderWidth + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(-<span class="subst">$&#123;liWidth&#125;</span>px)`</span></span><br><span class="line">moveDist = -liWidth</span><br><span class="line"></span><br><span class="line">arrow.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="property">preventDefault</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;next&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// if 실행문이 변경됐다 마지막인덱스에 갔을때 멈추는게 아니라 계속 넘어가도록 실행문을 작성한다</span></span><br><span class="line">    moveDist += -liWidth</span><br><span class="line">    curIndex += <span class="number">1</span></span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">`all <span class="subst">$&#123;speedTime&#125;</span>ms ease-in-out`</span></span><br><span class="line">    <span class="keyword">if</span> (curIndex === slideCloneLis.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// 마지막 인덱스에 갔을때 setTimeout()함수를 실행한다</span></span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">&#x27;all 0ms&#x27;</span> <span class="comment">// transition 효과를 없애주고</span></span><br><span class="line">        moveDist = -liWidth <span class="comment">// 처음의 포지션값으로 돌려준다</span></span><br><span class="line">        curIndex = <span class="number">1</span> <span class="comment">// index값도 1로 재할당</span></span><br><span class="line">        slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span> <span class="comment">// css에 적용해준다</span></span><br><span class="line">      &#125;, speedTime)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    moveDist += liWidth</span><br><span class="line">    curIndex += -<span class="number">1</span></span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">`all <span class="subst">$&#123;speedTime&#125;</span>ms ease-in-out`</span></span><br><span class="line">    <span class="keyword">if</span> (curIndex === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">&#x27;all 0ms&#x27;</span> <span class="comment">// transition 효과를 없애준다</span></span><br><span class="line">        moveDist = -liWidth * (slideCloneLis.<span class="property">length</span> - <span class="number">2</span>) <span class="comment">// 포지션을 값을 정해준다</span></span><br><span class="line">        curIndex = slideCloneLis.<span class="property">length</span> - <span class="number">2</span> <span class="comment">// index 값 재할당</span></span><br><span class="line">        slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span> <span class="comment">// css에 적용</span></span><br><span class="line">      &#125;, speedTime)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>prev 버튼을 눌렀을시 헷갈린점<ol><li>moveDist 값이 원래의 4번 위치로 가야한다</li><li>curIndex도 4번이어야한다</li></ol></li><li>현재 이미지의 갯수는 6개이고 원래의 4번이미지의 curIndex 값은 4번이므로 배열의 길이에서 클론한 li의 갯수만큼 빼준다</li></ul><h3 id="코드-정리"><a href="#코드-정리" class="headerlink" title="코드 정리"></a>코드 정리</h3><p>코드가 길어지고 반복되는 요소가 있으므로 함수로 만들어 코드를 정리해준다</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  노드 준비</span></span><br><span class="line"><span class="keyword">const</span> kindWrap = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.kind_wrap&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slider = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> slideLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> arrow = kindWrap.<span class="title function_">querySelector</span>(<span class="string">&#x27;.arrow&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> cloneA = slideLis[<span class="number">0</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">const</span> cloneC = slideLis[slideLis.<span class="property">length</span> - <span class="number">1</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span><br><span class="line">slider.<span class="title function_">insertBefore</span>(cloneC, slideLis[<span class="number">0</span>])</span><br><span class="line">slider.<span class="title function_">appendChild</span>(cloneA)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수 초기화</span></span><br><span class="line"><span class="keyword">let</span> curIndex = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> moveDist = <span class="number">0</span></span><br><span class="line"><span class="keyword">const</span> speedTime = <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSSOM 셋업</span></span><br><span class="line"><span class="keyword">const</span> slideCloneLis = slider.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> liWidth = slideLis[<span class="number">0</span>].<span class="property">clientWidth</span></span><br><span class="line"><span class="keyword">const</span> sliderWidth = liWidth * slideCloneLis.<span class="property">length</span></span><br><span class="line">slider.<span class="property">style</span>.<span class="property">width</span> = sliderWidth + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">moveDist = -liWidth</span><br><span class="line">slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(-<span class="subst">$&#123;liWidth&#125;</span>px)`</span></span><br><span class="line"></span><br><span class="line">arrow.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="property">preventDefault</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">className</span> === <span class="string">&#x27;next&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">move</span>(-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> (curIndex === slideCloneLis.<span class="property">length</span> - <span class="number">1</span>) <span class="title function_">moveTimeOut</span>(<span class="number">1</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">move</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> (curIndex === <span class="number">0</span>) <span class="title function_">moveTimeOut</span>(slideCloneLis.<span class="property">length</span> - <span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">move</span>(<span class="params">direction</span>) &#123;</span><br><span class="line">  moveDist += liWidth * direction</span><br><span class="line">  curIndex += -<span class="number">1</span> * direction</span><br><span class="line">  slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">  slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">`all <span class="subst">$&#123;speedTime&#125;</span>ms ease-in-out`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">moveTimeOut</span>(<span class="params">index</span>) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">transition</span> = <span class="string">&#x27;all 0ms&#x27;</span></span><br><span class="line">    moveDist = -liWidth * index</span><br><span class="line">    curIndex = index</span><br><span class="line">    slider.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">`translateX(<span class="subst">$&#123;moveDist&#125;</span>px)`</span></span><br><span class="line">  &#125;, speedTime)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/css/">css</category>
      
      <category domain="https://sacultang.github.io/tags/HTML/">HTML</category>
      
      
      <comments>https://sacultang.github.io/2022/04/27/JS-ImageSlider/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SCSS</title>
      <link>https://sacultang.github.io/2022/04/26/SCSS/</link>
      <guid>https://sacultang.github.io/2022/04/26/SCSS/</guid>
      <pubDate>Tue, 26 Apr 2022 08:10:59 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;SCSS&quot;&gt;&lt;a href=&quot;#SCSS&quot; class=&quot;headerlink&quot; title=&quot;SCSS&quot;&gt;&lt;/a&gt;SCSS&lt;/h1&gt;&lt;p&gt;CSS 전처리기 (CSS Preprocessor)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전처리기에는 SCSS,Sass,Less,Stylus 등이 있다&lt;/li&gt;
&lt;li&gt;CSS 문법과 유사하지만 선택자의 중첩, 조건문, 반복문 등 표준 CSS 보다 훨씬 많은 기능을 사용해서 편리하게 작성 가능&lt;/li&gt;
&lt;li&gt;웹에서는 CSS만 동작하기 때문에 SCSS를 웹에서 동작 가능한 CSS로 컴파일(Compile)해줘야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SCSS 컴파일 미리보기 사이트&lt;br&gt;&lt;a href=&quot;https://www.sassmeister.com/&quot;&gt;https://www.sassmeister.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;주석&quot;&gt;&lt;a href=&quot;#주석&quot; class=&quot;headerlink&quot; title=&quot;주석&quot;&gt;&lt;/a&gt;주석&lt;/h2&gt;&lt;p&gt;SCSS에서는 CSS에서 사용하는 주석방식 외에도&lt;br&gt;&amp;#x2F;&amp;#x2F; 같은 JS에서 사용하는 주석 방식도 사용 가능하다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;주의점 &amp;#x2F;&amp;#x2F; 로 주석 처리할 시 CSS로 컴파일 하면 내용이 사라진다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt; : royalblue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// font-size:60px; JS에서 사용하는 주석 방식&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* background-color : orange */&lt;/span&gt; 일반 CSS에서 사용하는 주석 방식. 컴파일시 나타나지 않는다&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;css로 컴파일시&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;h1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:royalblue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* background-color : orange */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="SCSS"><a href="#SCSS" class="headerlink" title="SCSS"></a>SCSS</h1><p>CSS 전처리기 (CSS Preprocessor)</p><ul><li>전처리기에는 SCSS,Sass,Less,Stylus 등이 있다</li><li>CSS 문법과 유사하지만 선택자의 중첩, 조건문, 반복문 등 표준 CSS 보다 훨씬 많은 기능을 사용해서 편리하게 작성 가능</li><li>웹에서는 CSS만 동작하기 때문에 SCSS를 웹에서 동작 가능한 CSS로 컴파일(Compile)해줘야 한다.</li></ul><p>SCSS 컴파일 미리보기 사이트<br><a href="https://www.sassmeister.com/">https://www.sassmeister.com/</a></p><h2 id="주석"><a href="#주석" class="headerlink" title="주석"></a>주석</h2><p>SCSS에서는 CSS에서 사용하는 주석방식 외에도<br>&#x2F;&#x2F; 같은 JS에서 사용하는 주석 방식도 사용 가능하다</p><ul><li>주의점 &#x2F;&#x2F; 로 주석 처리할 시 CSS로 컴파일 하면 내용이 사라진다</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">scss</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span> : royalblue;</span><br><span class="line">    <span class="comment">// font-size:60px; JS에서 사용하는 주석 방식</span></span><br><span class="line">    <span class="comment">/* background-color : orange */</span> 일반 CSS에서 사용하는 주석 방식. 컴파일시 나타나지 않는다</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">css로 컴파일시</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>:royalblue;</span><br><span class="line">  <span class="comment">/* background-color : orange */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="중첩-Nesting"><a href="#중첩-Nesting" class="headerlink" title="중첩(Nesting)"></a>중첩(Nesting)</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">scss <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">      <span class="selector-class">.name</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: royalblue;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.age</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: orange;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- css <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.name</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: royalblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.age</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="상위-선택자-참조-amp"><a href="#상위-선택자-참조-amp" class="headerlink" title="상위 선택자 참조 - &amp;"></a>상위 선택자 참조 - &amp;</h2><p>&amp;기호가 붙어 있는것은 상위 선택자를 참조하고 있다<br>즉, 상위 선택자가 &amp;기호가 있는 곳으로 치환된다다는 개념</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">- scss <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  &amp;<span class="selector-class">.actiove</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list</span> &#123;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    &amp;<span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">      <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* prettier-ignore */</span></span><br><span class="line">- css </span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-class">.actiove</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="중첩된-속성"><a href="#중첩된-속성" class="headerlink" title="중첩된 속성"></a>중첩된 속성</h2><p>반복되는 속성 네임스페이스를 선택자처럼 사용할 수 있다<br>콜론(:) 기호로 구분해줘야 하며 세미콜론(;)으로 마무리 해준다</p><blockquote><p>네임스페이스란 이름을 통해 구분 가능한 범위를 만들어내는 것으로 일종의 유효범위를 지정하는 방법을 말한다</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">- scss <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: &#123;</span><br><span class="line">    weight: bold;</span><br><span class="line">    size: <span class="number">10px</span>;</span><br><span class="line">    family: sans-serif;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">margin</span>: &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">padding</span>: &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">css <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="변수-Variables"><a href="#변수-Variables" class="headerlink" title="변수(Variables)"></a>변수(Variables)</h2><ul><li>선언된 위치에 따라 유효범위가 있다</li><li>재할당이 가능하다</li><li>재할당된 코드 아래쪽으로는 재할당된 값으로 사용이 된다.</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">scss <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="variable">$size</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="variable">$size</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line">    <span class="attribute">transform</span>: translateX(<span class="variable">$size</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">css <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: translateX(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="산술-연산"><a href="#산술-연산" class="headerlink" title="산술 연산"></a>산술 연산</h2><ul><li>나누기 연산<ol><li>나누기연산 할때는 ()로 감싸주거나,</li><li>다른 연산자와 같이 사용하거나,</li><li>변수를 사용하는 방법으로 나누기 연산을 사용해야 한다.</li></ol></li><li>산술 연산할때는 기본적 단위가 동일해야 한다<ul><li>width: 100% - 200px (X)</li><li>또는, calc()함수를 사용한다<ul><li>width: calc(100% - 200px) (o)</li></ul></li></ul></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">scss <span class="comment">//</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span> + <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span> - <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span> * <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span> / <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> % <span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line">css <span class="comment">//</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span>/<span class="number">2</span>; <span class="comment">// 나누기 연산자는 동작하지 않는다</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="재활용-Mixins"><a href="#재활용-Mixins" class="headerlink" title="재활용(Mixins)"></a>재활용(Mixins)</h2><p>mixin으로 설정한 재활용 코드를<br>include로 불러와 재활용 할 수 있다</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">scss <span class="comment">//</span></span><br><span class="line"><span class="keyword">@mixin</span> center &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> center;</span><br><span class="line">  <span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="keyword">@include</span> center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">css <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mixin으로-설정한-값을-바꿀-수-있다"><a href="#mixin으로-설정한-값을-바꿀-수-있다" class="headerlink" title="mixin으로 설정한 값을 바꿀 수 있다"></a>mixin으로 설정한 값을 바꿀 수 있다</h3><ul><li>매개변수로 변수를 넣는다</li><li>변경될 값에 변수를 지정 한다</li><li>include로 불러올때 인수에 원하는 값을 적어 넣는다</li><li>JS 함수 실행과 유사하다</li></ul><h3 id="매개변수의-변수부분에-기본값을-지정해-줄수-있다"><a href="#매개변수의-변수부분에-기본값을-지정해-줄수-있다" class="headerlink" title="매개변수의 변수부분에 기본값을 지정해 줄수 있다."></a>매개변수의 변수부분에 기본값을 지정해 줄수 있다.</h3><ul><li>include로 불러 올때 아무 값도 지정하지 않으면 지정해뒀던 기본값으로 컴파일 된다</li><li>쉼표(,) 로 여러가지 매개변수를 지정해줄수 있다</li><li>키워드 인수<ul><li>인수가 여러개 일때 값을 일일이 다 지정하는게 아닌<br>매개변수 이름을 사용하여 해당 값만 지정해줄 수 있다</li></ul></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">scss <span class="comment">//</span></span><br><span class="line"><span class="keyword">@mixin</span> box(<span class="variable">$size</span>:<span class="number">100px</span> , <span class="variable">$color</span>:tomato) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$size</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> box(<span class="number">200px</span>, red);</span><br><span class="line">  <span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="keyword">@include</span> box(<span class="variable">$color</span>: green);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> box;</span><br><span class="line">&#125;</span><br><span class="line">css <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: tomato;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="재활용-content"><a href="#재활용-content" class="headerlink" title="재활용 @content"></a>재활용 @content</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> left-top &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">@content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="keyword">@include</span> left-top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="keyword">@include</span> left-top &#123;</span><br><span class="line">    <span class="comment">// 이 부분에 작성한 코드가 @content로 들어간다</span></span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="반복문"><a href="#반복문" class="headerlink" title="반복문"></a>반복문</h2><ul><li>제로(0)베이스가 아닌 1부터 시작한다</li><li>JS와 달리 문자보간은 #{}로 한다</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">scss <span class="comment">//</span></span><br><span class="line"><span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">1</span> through <span class="number">10</span> &#123;</span><br><span class="line">  <span class="selector-class">.box</span><span class="selector-pseudo">:nth-child</span>(#&#123;$i&#125;) &#123;</span><br><span class="line">    <span class="comment">// 선택자는 값이 아니기에 보간해야함</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span> * <span class="variable">$i</span>; <span class="comment">// 실제 값을 적는 부분이기 때문에 보간안함</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">css <span class="comment">//</span></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">... <span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:nth-child</span>(<span class="number">9</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:nth-child</span>(<span class="number">10</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="반복문-each"><a href="#반복문-each" class="headerlink" title="반복문 @each"></a>반복문 @each</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$number</span>: <span class="number">1</span>; <span class="comment">// .5, 100px, 1em</span></span><br><span class="line"><span class="variable">$string</span>: bold; <span class="comment">// relative, &quot;../images/a.png&quot;</span></span><br><span class="line"><span class="variable">$color</span>: red; <span class="comment">// blue, #FFFF00, rgba(0,0,0,.1)</span></span><br><span class="line"><span class="variable">$boolean</span>: true; <span class="comment">// false</span></span><br><span class="line"><span class="variable">$null</span>: null;</span><br><span class="line"><span class="variable">$list</span>: orange, royalblue, yellow; <span class="comment">// 배열 형태</span></span><br><span class="line"><span class="variable">$map</span>: (</span><br><span class="line">  // Object형이기 대문에 키,밸류 값이 있다</span><br><span class="line">  o: orange,</span><br><span class="line">  r: royalblue,</span><br><span class="line">  y: yellow</span><br><span class="line">);</span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$i</span> in <span class="variable">$list</span> &#123;</span><br><span class="line">  <span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$i</span>; <span class="comment">// 총 3개의 박스가 만들어지고 각 박스의 color는 list의 아이템값으로 채워진다</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$k</span>, <span class="variable">$v</span> in <span class="variable">$map</span> &#123;</span><br><span class="line">  <span class="comment">// key ,value로 받아온다</span></span><br><span class="line">  <span class="selector-class">.box-</span>#&#123;<span class="variable">$k</span>&#125; &#123;</span><br><span class="line">    <span class="comment">// 총 3개의 박스가 key값이 붙여진 이름으로 만들어진다</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$v</span>; <span class="comment">// value 값인 색상으로 채워진다</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="함수"><a href="#함수" class="headerlink" title="함수"></a>함수</h2><p>JS와 함수와 유사하다<br>실제 값을 연산을해서 반환된 값을 사용한다</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">scss<span class="comment">//</span></span><br><span class="line"><span class="keyword">@mixin</span> center &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@function</span> ratio(<span class="variable">$size</span>, <span class="variable">$ratio</span>) &#123;</span><br><span class="line">  <span class="keyword">@return</span> <span class="variable">$size</span> * <span class="variable">$ratio</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="variable">$width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$width</span>;</span><br><span class="line">  <span class="attribute">height</span>: ratio(<span class="variable">$width</span>, <span class="number">1</span>/<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">@include</span> center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">css<span class="comment">//</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">56.25px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="색상-내장-함수"><a href="#색상-내장-함수" class="headerlink" title="색상 내장 함수"></a>색상 내장 함수</h2><table><thead><tr><th>함수</th><th>효과</th></tr></thead><tbody><tr><td>mix(color1,color2)</td><td>color1과 color2를 mix</td></tr><tr><td>lighten(color1,퍼센트)</td><td>color1을 퍼센트만큼 밝게</td></tr><tr><td>darken(color1,퍼센트)</td><td>color1을 퍼센트만큼 어둡게</td></tr><tr><td>saturate(color1,퍼센트)</td><td>color1을 퍼센트만큼 채도 UP</td></tr><tr><td>desaturate(color1,퍼센트)</td><td>color1을 퍼센트만큼 채도 DOWN</td></tr><tr><td>grayscale(color1)</td><td>color1을 gray로 바꾼다</td></tr><tr><td>invert(color1)</td><td>color1을 반전</td></tr><tr><td>rgba(color1,.5)</td><td>color1을 .5 만큼 투명하게</td></tr></tbody></table><h2 id="가져오기"><a href="#가져오기" class="headerlink" title="가져오기"></a>가져오기</h2><ul><li>url() 안에 쓰지 않아도 된다</li><li>확장자를 쓰지 않아도 된다</li><li>쉼표(,)로 여러개를 불러올 수 있다</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">main</span><span class="selector-class">.scss</span> <span class="comment">//</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./sub.scss&quot;</span>, <span class="string">&quot;./sub2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$color</span>:royalblue;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">$color</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/css/">css</category>
      
      
      <category domain="https://sacultang.github.io/tags/css/">css</category>
      
      
      <comments>https://sacultang.github.io/2022/04/26/SCSS/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JS-Hoisting</title>
      <link>https://sacultang.github.io/2022/04/25/JS-Hoisting/</link>
      <guid>https://sacultang.github.io/2022/04/25/JS-Hoisting/</guid>
      <pubDate>Mon, 25 Apr 2022 06:07:15 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;호이스팅-Hoisting&quot;&gt;&lt;a href=&quot;#호이스팅-Hoisting&quot; class=&quot;headerlink&quot; title=&quot;호이스팅 (Hoisting)&quot;&gt;&lt;/a&gt;호이스팅 (Hoisting)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;코드가 실행이 되기 전에 먼저</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="호이스팅-Hoisting"><a href="#호이스팅-Hoisting" class="headerlink" title="호이스팅 (Hoisting)"></a>호이스팅 (Hoisting)</h1><ul><li>코드가 실행이 되기 전에 먼저 선언해둔 변수&amp;함수를 조사하여 메모리에 저장해둔다(유효 범위의 최상단에 선언한다)</li><li>자바스크립트에서 호이스팅시 변수의 선언과 초기화(undefined으로) 같이 시킨다</li></ul><h2 id="var-amp-let"><a href="#var-amp-let" class="headerlink" title="var &amp; let"></a>var &amp; let</h2><p>var는 전역변수와 지역변수의 개념이 확실치 않다</p><h3 id="var"><a href="#var" class="headerlink" title="var"></a>var</h3><ol><li>함수만 지역변수로 호이스팅이 되고 나머지는 다 전역변수로 올라간다</li><li>같은 이름의 변수를 여러번 생성가능하다</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line"><span class="comment">// 1 2 3 4 5 가 출력된다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="comment">// 1 2 가 출력된다</span></span><br></pre></td></tr></table></figure><h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><ol><li>let도 호이스팅이 된다</li><li>Temporal Death Zone(TDZ) 만들어 변수의 선언문이 나오기전까지는 변수에 접근할수 없다</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line"><span class="comment">// 에러가 발생한다</span></span><br></pre></td></tr></table></figure><p><img src="/./images/err1.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="keyword">let</span> a = <span class="number">2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="comment">// 역시 에러가 발생한다</span></span><br></pre></td></tr></table></figure><p><img src="/./images/err2.png"></p>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://sacultang.github.io/2022/04/25/JS-Hoisting/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Game-WORDLE part.2</title>
      <link>https://sacultang.github.io/2022/04/23/Game-WORDLE-1/</link>
      <guid>https://sacultang.github.io/2022/04/23/Game-WORDLE-1/</guid>
      <pubDate>Sat, 23 Apr 2022 11:14:50 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;키보드-버튼-추가하기&quot;&gt;&lt;a href=&quot;#키보드-버튼-추가하기&quot; class=&quot;headerlink&quot; title=&quot;키보드 버튼 추가하기&quot;&gt;&lt;/a&gt;키보드 버튼 추가하기&lt;/h1&gt;&lt;p&gt;html구조&lt;/p&gt;
&lt;figure class=&quot;highligh</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="키보드-버튼-추가하기"><a href="#키보드-버튼-추가하기" class="headerlink" title="키보드 버튼 추가하기"></a>키보드 버튼 추가하기</h1><p>html구조</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;game-keyboard&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;first-row&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>q<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>w<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>e<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>r<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>t<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>y<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>u<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>i<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>o<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>p<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;secon-row&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>a<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>s<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>d<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>f<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>h<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>j<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>k<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>l<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thir-row&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn del&quot;</span>&gt;</span>Del<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>z<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>x<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>c<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>v<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>b<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>n<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn text-btn&quot;</span>&gt;</span>m<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;key-btn enter&quot;</span>&gt;</span>Enter<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="버튼-가져오기"><a href="#버튼-가져오기" class="headerlink" title="버튼 가져오기"></a>버튼 가져오기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buttons = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.game-keyboard .key-btn&#x27;</span>))</span><br><span class="line"><span class="keyword">const</span> delBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.del&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> enterBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.enter&#x27;</span>)</span><br></pre></td></tr></table></figure><p>querySelectorAll로 가져오면 유사배열이기때문에 배열메소드가 안 먹힐때가 있다</p><p>Arry.from()으로 배열로 만들어 준다</p><h2 id="버튼-클릭-이벤트"><a href="#버튼-클릭-이벤트" class="headerlink" title="버튼 클릭 이벤트"></a>버튼 클릭 이벤트</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">buttons.<span class="title function_">map</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">e.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">btn</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> btnTarget = btn.<span class="property">target</span></span><br><span class="line"><span class="comment">// event.target 은 누른 버튼이 무엇인지 알려준다</span></span><br><span class="line"><span class="keyword">let</span> btnText = btn.<span class="property">target</span>.<span class="property">textContent</span></span><br><span class="line"><span class="comment">// 누른 버튼 안에 들어있는 텍스트를 저장한다</span></span><br><span class="line"><span class="keyword">let</span> upperCaseBtn = btnText.<span class="title function_">toUpperCase</span>()</span><br><span class="line"><span class="comment">// html에 버튼을 소문자로 작성 했기때문에 대문자화 해준다</span></span><br><span class="line"><span class="comment">// 정답 단어가 대문자이기 때문에 비교시 대문자여야 한다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (btnTarget !== delBtn &amp;&amp; btnTarget !== enterBtn) &#123;</span><br><span class="line"><span class="comment">// querySelectoAll 로 받아온 버튼에 delete와 enter도 포함 되어있다</span></span><br><span class="line"><span class="comment">// del 과 enter 버튼을 제외한 나머지 버튼만 동작 하도록 조건을 만들어준다</span></span><br><span class="line"><span class="keyword">if</span> (tileNum &lt; word.<span class="property">legnth</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> curTile = rowArr[boardRow].<span class="property">children</span>[tileNum]</span><br><span class="line"><span class="keyword">if</span> (curTile.<span class="property">textContent</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">curTile.<span class="property">textContet</span> = upperCaseBtn</span><br><span class="line">tileNum++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (btnTarget === delBtn) &#123;</span><br><span class="line"><span class="keyword">if</span> (tileNum &gt; <span class="number">0</span> &amp;&amp; tileNum &lt;= word.<span class="property">legnth</span>) &#123;</span><br><span class="line">tileNum--</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> curTile = rowArr[boardRow].<span class="property">children</span>[tileNum]</span><br><span class="line">curTile.<span class="property">textContet</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (btnTarget === enterBtn &amp;&amp; tileNum === word.<span class="property">legnth</span>) &#123;</span><br><span class="line"><span class="title function_">gameCheck</span>()</span><br><span class="line">bordRow++</span><br><span class="line">tileNum = <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>안쪽의 로직은 키보드로직과 동일하다</p><p>누르는 버튼의 타켓이 del 인지 enter인지 아니면 일반 텍스트 인지만 구분해주면 된다!</p>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/css/">css</category>
      
      <category domain="https://sacultang.github.io/tags/HTML/">HTML</category>
      
      
      <comments>https://sacultang.github.io/2022/04/23/Game-WORDLE-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>중복단어제거</title>
      <link>https://sacultang.github.io/2022/04/21/duplicate-text/</link>
      <guid>https://sacultang.github.io/2022/04/21/duplicate-text/</guid>
      <pubDate>Thu, 21 Apr 2022 12:45:05 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;중복-단어-제거&quot;&gt;&lt;a href=&quot;#중복-단어-제거&quot; class=&quot;headerlink&quot; title=&quot;중복 단어 제거&quot;&gt;&lt;/a&gt;중복 단어 제거&lt;/h1&gt;&lt;h3 id=&quot;n개의-문자열이-입력되면-중복된-문자열은-제거하고-출력한다&quot;&gt;&lt;a href</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="중복-단어-제거"><a href="#중복-단어-제거" class="headerlink" title="중복 단어 제거"></a>중복 단어 제거</h1><h3 id="n개의-문자열이-입력되면-중복된-문자열은-제거하고-출력한다"><a href="#n개의-문자열이-입력되면-중복된-문자열은-제거하고-출력한다" class="headerlink" title="n개의 문자열이 입력되면 중복된 문자열은 제거하고 출력한다"></a>n개의 문자열이 입력되면 중복된 문자열은 제거하고 출력한다</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> textArr = [<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;good&#x27;</span>, <span class="string">&#x27;time&#x27;</span>, <span class="string">&#x27;good&#x27;</span>, <span class="string">&#x27;student&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;bye&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">solution</span>(<span class="params">t</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> ans = t.<span class="title function_">filter</span>(<span class="function">(<span class="params">text, index</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> textArr.<span class="title function_">indexOf</span>(text) === index</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ans)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">solution</span>(textArr)</span><br></pre></td></tr></table></figure><h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf()"></a>indexOf()</h3><ul><li>배열에서 지정된 요소를 찾을 수 있는 첫 번째 인덱스를 반환한다.</li></ul><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf</a></p><h3 id="filter-element-index-source-x3D-gt"><a href="#filter-element-index-source-x3D-gt" class="headerlink" title="filter((element, index, source) &#x3D;&gt; {})"></a>filter((element, index, source) &#x3D;&gt; {})</h3><ul><li>주어진 함수의 테스트를 통과하는 모든 요소를 모아 새로운 배열로 반환한다.</li></ul><p>element : 요소값<br>index(optional) : 요소의 인덱스<br>source(optional) : 순회되는 배열 객체</p><p><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/filter</a></p>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/algorithm/">algorithm</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/algorithm/">algorithm</category>
      
      
      <comments>https://sacultang.github.io/2022/04/21/duplicate-text/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JS-데이터 불변성</title>
      <link>https://sacultang.github.io/2022/04/21/JS-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%88%EB%B3%80%EC%84%B1/</link>
      <guid>https://sacultang.github.io/2022/04/21/JS-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%88%EB%B3%80%EC%84%B1/</guid>
      <pubDate>Thu, 21 Apr 2022 12:13:08 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;데이터-불변성-Immutability&quot;&gt;&lt;a href=&quot;#데이터-불변성-Immutability&quot; class=&quot;headerlink&quot; title=&quot;데이터 불변성(Immutability)&quot;&gt;&lt;/a&gt;데이터 불변성(Immutability)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;원시 데이터 : String, Number, Boolean, undefined, null&lt;ul&gt;
&lt;li&gt;원시데이터들은 메모리에 만들어지면 불변한다.&lt;/li&gt;
&lt;li&gt;간단히 생긴게 같으면 같은 데이터, 다르면 다른 데이터이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, a === b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1 4 false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, a === b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1 1 true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, a === b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 7 1 false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(b, c, b === c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1 1 true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;참조형 데이터 : Object, Array, Function&lt;ul&gt;
&lt;li&gt;불변성이 없다. 즉, 가변한다&lt;/li&gt;
&lt;li&gt;모양이 같다고 같은 데이터는 아니다&lt;/li&gt;
&lt;li&gt;한 쪽을 수정하면 의도치 않게 다른쪽도 수정이 될 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &amp;#123; &lt;span class=&quot;attr&quot;&gt;k&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &amp;#123; &lt;span class=&quot;attr&quot;&gt;k&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, a === b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#123;k:1&amp;#125; &amp;#123;k:1&amp;#125; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.&lt;span class=&quot;property&quot;&gt;k&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, a === b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#123;k:7&amp;#125; &amp;#123;k:7&amp;#125; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.&lt;span class=&quot;property&quot;&gt;k&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, a === b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#123;k:2&amp;#125; &amp;#123;k:2&amp;#125; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; c = b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, c, a === c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#123;k:2&amp;#125; &amp;#123;k:2&amp;#125; &amp;#123;k:2&amp;#125; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.&lt;span class=&quot;property&quot;&gt;k&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(a, b, c, a === c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#123;k:9&amp;#125; &amp;#123;k:9&amp;#125; &amp;#123;k:9&amp;#125; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;참조형 데이터를 새롭게 할당해서 완전히 구분지어 사용하고 싶으면&lt;br&gt;복사라는 개념을 사용해 메모리상에서 분리해줘야 한다.&lt;ul&gt;
&lt;li&gt;복사에는 얕은복사와 깊은복사가 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;emails&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&amp;#x27;abc@gmail.com&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; copyUser = user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(copyUser === user)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user.&lt;span class=&quot;property&quot;&gt;age&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(user.&lt;span class=&quot;property&quot;&gt;age&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(copyUser.&lt;span class=&quot;property&quot;&gt;age&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 데이터가 둘 다 변했다&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="데이터-불변성-Immutability"><a href="#데이터-불변성-Immutability" class="headerlink" title="데이터 불변성(Immutability)"></a>데이터 불변성(Immutability)</h1><ul><li>원시 데이터 : String, Number, Boolean, undefined, null<ul><li>원시데이터들은 메모리에 만들어지면 불변한다.</li><li>간단히 생긴게 같으면 같은 데이터, 다르면 다른 데이터이다.</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, a === b)</span><br><span class="line"><span class="comment">// 1 4 false</span></span><br><span class="line">b = a</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, a === b)</span><br><span class="line"><span class="comment">// 1 1 true</span></span><br><span class="line">a = <span class="number">7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, a === b)</span><br><span class="line"><span class="comment">// 7 1 false</span></span><br><span class="line"><span class="keyword">let</span> c = <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b, c, b === c)</span><br><span class="line"><span class="comment">// 1 1 true</span></span><br></pre></td></tr></table></figure><ul><li>참조형 데이터 : Object, Array, Function<ul><li>불변성이 없다. 즉, 가변한다</li><li>모양이 같다고 같은 데이터는 아니다</li><li>한 쪽을 수정하면 의도치 않게 다른쪽도 수정이 될 수 있다.</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123; <span class="attr">k</span>: <span class="number">1</span> &#125;</span><br><span class="line"><span class="keyword">let</span> b = &#123; <span class="attr">k</span>: <span class="number">1</span> &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, a === b)</span><br><span class="line"><span class="comment">// &#123;k:1&#125; &#123;k:1&#125; false</span></span><br><span class="line">a.<span class="property">k</span> = <span class="number">7</span></span><br><span class="line">b = a</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, a === b)</span><br><span class="line"><span class="comment">// &#123;k:7&#125; &#123;k:7&#125; true</span></span><br><span class="line">a.<span class="property">k</span> = <span class="number">2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, a === b)</span><br><span class="line"><span class="comment">// &#123;k:2&#125; &#123;k:2&#125; true</span></span><br><span class="line"><span class="keyword">let</span> c = b</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c, a === c)</span><br><span class="line"><span class="comment">// &#123;k:2&#125; &#123;k:2&#125; &#123;k:2&#125; true</span></span><br><span class="line">a.<span class="property">k</span> = <span class="number">9</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c, a === c)</span><br><span class="line"><span class="comment">// &#123;k:9&#125; &#123;k:9&#125; &#123;k:9&#125; true</span></span><br></pre></td></tr></table></figure><ul><li>참조형 데이터를 새롭게 할당해서 완전히 구분지어 사용하고 싶으면<br>복사라는 개념을 사용해 메모리상에서 분리해줘야 한다.<ul><li>복사에는 얕은복사와 깊은복사가 있다</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">85</span>,</span><br><span class="line"><span class="attr">emails</span>: [<span class="string">&#x27;abc@gmail.com&#x27;</span>],</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> copyUser = user</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyUser === user)</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line">user.<span class="property">age</span> = <span class="number">22</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">age</span>) <span class="comment">// 22</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyUser.<span class="property">age</span>) <span class="comment">// 22</span></span><br><span class="line"><span class="comment">// 데이터가 둘 다 변했다</span></span><br></pre></td></tr></table></figure><span id="more"></span><ol><li>얕은 복사</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 복사방법.1</span></span><br><span class="line"><span class="comment">// Object.assign()을 이용하는 방법</span></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">85</span>,</span><br><span class="line"><span class="attr">emails</span>: [<span class="string">&#x27;abc@gmail.com&#x27;</span>],</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> copyUser = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, user)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyUser === user)</span><br><span class="line"><span class="comment">// false</span></span><br><span class="line">user.<span class="property">age</span> = <span class="number">22</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">age</span>) <span class="comment">// 22</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyUser.<span class="property">age</span>) <span class="comment">// 85</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 방법.2</span></span><br><span class="line"><span class="comment">// ...전개연산자를 이용하는 방법</span></span><br><span class="line"><span class="keyword">const</span> copyUser = &#123; ...user &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyUser === user)</span><br><span class="line"><span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>얕은 복사의 문제점</p><ul><li>얕은 복사의 문제점은 겉표면만 복사하기 때문에 데이터 안의 또다른<br>참조형 데이터는 복사가 되지 않는다.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">user.<span class="property">emails</span>.<span class="title function_">push</span>(<span class="string">&#x27;neo@naver.com&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">emails</span> === copyUser.<span class="property">emails</span>)</span><br><span class="line"><span class="comment">// ture</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">emails</span>)</span><br><span class="line"><span class="comment">// [&#x27;sacultang@gmail.com&#x27;, &#x27;neo@naver.com&#x27;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyUser.<span class="property">emails</span>)</span><br><span class="line"><span class="comment">// [&#x27;sacultang@gmail.com&#x27;, &#x27;neo@naver.com&#x27;]</span></span><br></pre></td></tr></table></figure><ol start="2"><li>깊은복사</li></ol><ul><li>자바스크립트로 구현하기 까다롭다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">copyObj</span>(<span class="params">obj</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> obj[key] === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">result[key] = <span class="title function_">copyObj</span>(obj[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">result[key] = obj[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> copiedobj = <span class="title function_">copyObj</span>(user)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copiedobj)</span><br></pre></td></tr></table></figure><p>user의 이메일은 배열이었는데 cpoiedobj에는 객체데이터로 바껴있다..<br>lodash를 사용하도록 하자..</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">&#x27;lodash&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clone = _.<span class="title function_">cloneDeep</span>(user)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(clone === user)</span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">clone.<span class="property">emails</span>.<span class="title function_">push</span>(<span class="string">&#x27;abc@naver.com&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">emails</span> === clone.<span class="property">emails</span>)</span><br><span class="line"><span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>잘 복사 된다</p>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/Object/">Object</category>
      
      
      <comments>https://sacultang.github.io/2022/04/21/JS-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%88%EB%B3%80%EC%84%B1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JS-구조 분해 할당</title>
      <link>https://sacultang.github.io/2022/04/21/JS-Date-Object/</link>
      <guid>https://sacultang.github.io/2022/04/21/JS-Date-Object/</guid>
      <pubDate>Thu, 21 Apr 2022 08:41:14 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;JS-Destructuring-assignment&quot;&gt;&lt;a href=&quot;#JS-Destructuring-assignment&quot; class=&quot;headerlink&quot; title=&quot;JS-Destructuring-assignment&quot;&gt;&lt;/a&gt;JS-Destructuring-assignment&lt;/h1&gt;&lt;h4 id=&quot;구조-분해-할당&quot;&gt;&lt;a href=&quot;#구조-분해-할당&quot; class=&quot;headerlink&quot; title=&quot;구조 분해 할당&quot;&gt;&lt;/a&gt;구조 분해 할당&lt;/h4&gt;&lt;hr&gt;
&lt;h2 id=&quot;객체데이터의-구조분해할당&quot;&gt;&lt;a href=&quot;#객체데이터의-구조분해할당&quot; class=&quot;headerlink&quot; title=&quot;객체데이터의 구조분해할당&quot;&gt;&lt;/a&gt;객체데이터의 구조분해할당&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;어떤 객체데이터에서 구조 분해 해서 원하는 속성들만 꺼내서 사용할 수 있는 개념&lt;/li&gt;
&lt;li&gt;데이터.속성 으로 표기하는 점표기법과 동일하다&lt;/li&gt;
&lt;li&gt;데이터[‘속성’] 인덱싱 방법과도 같다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;email&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc@gmail.com&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123; name, age, email, address &amp;#125; = user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`사용자의 이름은 &lt;span class=&quot;subst&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;입니다.`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 사용자의 이름은 abc입니다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;`사용자의 이름은 &lt;span class=&quot;subst&quot;&gt;$&amp;#123;age&amp;#125;&lt;/span&gt;입니다.`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 사용자의 이름은 85입니다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(address)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123; name, age, email, address = &lt;span class=&quot;string&quot;&gt;&amp;#x27;korea&amp;#x27;&lt;/span&gt; &amp;#125; = user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 기본값을 지정해줄 수 있다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;email&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc@gmail.com&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;address&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;usa&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123; name, age, email, address = &lt;span class=&quot;string&quot;&gt;&amp;#x27;korea&amp;#x27;&lt;/span&gt; &amp;#125; = user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(address)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// usa 출력&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;구조분해 할때 기본값을 지정했어도 데이터 안에 값이 있으면 데이터의 값으로 출력 된다&lt;/p&gt;
&lt;p&gt;객체데이터의 속성의 이름을 바꿀때&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attr&quot;&gt;email&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;abc@gmail.com&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: hello, age, email, address &amp;#125; = user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(hello)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// abc 출력된다&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// name is not defined 에러가 출력된다&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="JS-Destructuring-assignment"><a href="#JS-Destructuring-assignment" class="headerlink" title="JS-Destructuring-assignment"></a>JS-Destructuring-assignment</h1><h4 id="구조-분해-할당"><a href="#구조-분해-할당" class="headerlink" title="구조 분해 할당"></a>구조 분해 할당</h4><hr><h2 id="객체데이터의-구조분해할당"><a href="#객체데이터의-구조분해할당" class="headerlink" title="객체데이터의 구조분해할당"></a>객체데이터의 구조분해할당</h2><ul><li>어떤 객체데이터에서 구조 분해 해서 원하는 속성들만 꺼내서 사용할 수 있는 개념</li><li>데이터.속성 으로 표기하는 점표기법과 동일하다</li><li>데이터[‘속성’] 인덱싱 방법과도 같다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">85</span>,</span><br><span class="line"><span class="attr">email</span>: <span class="string">&#x27;abc@gmail.com&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; name, age, email, address &#125; = user</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`사용자의 이름은 <span class="subst">$&#123;name&#125;</span>입니다.`</span>)</span><br><span class="line"><span class="comment">// 사용자의 이름은 abc입니다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`사용자의 이름은 <span class="subst">$&#123;age&#125;</span>입니다.`</span>)</span><br><span class="line"><span class="comment">// 사용자의 이름은 85입니다.</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(address)</span><br><span class="line"><span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; name, age, email, address = <span class="string">&#x27;korea&#x27;</span> &#125; = user</span><br><span class="line"><span class="comment">// 기본값을 지정해줄 수 있다.</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">85</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;abc@gmail.com&#x27;</span></span><br><span class="line">  <span class="attr">address</span>: <span class="string">&#x27;usa&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; name, age, email, address = <span class="string">&#x27;korea&#x27;</span> &#125; = user</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(address)</span><br><span class="line"><span class="comment">// usa 출력</span></span><br></pre></td></tr></table></figure><p>구조분해 할때 기본값을 지정했어도 데이터 안에 값이 있으면 데이터의 값으로 출력 된다</p><p>객체데이터의 속성의 이름을 바꿀때</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">85</span>,</span><br><span class="line"><span class="attr">email</span>: <span class="string">&#x27;abc@gmail.com&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">name</span>: hello, age, email, address &#125; = user</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(hello)</span><br><span class="line"><span class="comment">// abc 출력된다</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name)</span><br><span class="line"><span class="comment">// name is not defined 에러가 출력된다</span></span><br></pre></td></tr></table></figure><span id="more"></span><hr><h2 id="배열데이터의-구조분해할당"><a href="#배열데이터의-구조분해할당" class="headerlink" title="배열데이터의 구조분해할당"></a>배열데이터의 구조분해할당</h2><ul><li>{ }가 아닌 [ ]기호를 사용 해야 한다</li><li>객체데이터와는 다르게 인덱싱되어 있기 때문에 이름이 아닌 순서대로 추출해야 한다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span>]</span><br><span class="line"><span class="keyword">const</span> [a, b, c, d] = fruits</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c, d)</span><br><span class="line"><span class="comment">// Apple Banana Cherry undefined 출력된다</span></span><br></pre></td></tr></table></figure><p>중간에 있는 데이터를 추출하고 싶을때</p><ul><li>필요없는 값은 비어두고 쉼표(,)로 순서를 구분해 주기만 하면 된다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span>]</span><br><span class="line"><span class="keyword">const</span> [, b] = fruits</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line"><span class="comment">// Banana 가 출력된다</span></span><br></pre></td></tr></table></figure><h1 id="전개-연산자-Spread"><a href="#전개-연산자-Spread" class="headerlink" title="전개 연산자 (Spread)"></a>전개 연산자 (Spread)</h1><ul><li>배열데이터를 쉼표(,)로 구분되는 각각의 아이템으로 전개해서 출력한다.</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fruits)</span><br><span class="line"><span class="comment">// [&#x27;Apple&#x27;, &#x27;Banana&#x27;, &#x27;Cherry&#x27;] 배열이 출력된다</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...fruits)</span><br><span class="line"><span class="comment">// &#x27;Apple&#x27; &#x27;Banana&#x27; &#x27;Cherry&#x27; 문자열로 출력된다</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">toObject</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">a</span>: a,</span><br><span class="line"><span class="attr">b</span>: b,</span><br><span class="line"><span class="attr">c</span>: c,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">toObject</span>(...fruits))</span><br><span class="line"><span class="comment">// &#123;a: &#x27;Apple&#x27;, b: &#x27;Banana&#x27;, c: &#x27;Cherry&#x27;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">toObject</span>(fruits[<span class="number">0</span>], fruits[<span class="number">1</span>], fruits[<span class="number">2</span>]))</span><br><span class="line"><span class="comment">// 전개 연산자로 작성한것과 같은 방법..</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">toObject</span>(fruits))</span><br><span class="line"><span class="comment">// &#123;a: Array(3), b: undefined, c: undefined&#125;</span></span><br><span class="line"><span class="comment">// a에 배열자체가 들어가 버린다</span></span><br></pre></td></tr></table></figure><p>fruits의 아이템들이 toObject의 인수로 들어가 객체데이터의 형태로 출력된다</p><hr><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span>, <span class="string">&#x27;Orange&#x27;</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">toObject</span>(<span class="params">a, b, ...c</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">a</span>: a,</span><br><span class="line"><span class="attr">b</span>: b,</span><br><span class="line"><span class="attr">c</span>: c,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">toObject</span>(...fruits))</span><br><span class="line"><span class="comment">// &#123;a: &#x27;Apple&#x27;, b: &#x27;Banana&#x27;, c: Array(2)&#125; 출력된다</span></span><br></pre></td></tr></table></figure><p>매개변수에서 사용할때는 순서대로 받아보고 순서가 명확하지 않을때는<br>나머지를 배열의 형태로 다 받는다</p>]]></content:encoded>
      
      
      <category domain="https://sacultang.github.io/categories/Web/">Web</category>
      
      <category domain="https://sacultang.github.io/categories/Web/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sacultang.github.io/tags/JavaScript/">JavaScript</category>
      
      <category domain="https://sacultang.github.io/tags/Object/">Object</category>
      
      
      <comments>https://sacultang.github.io/2022/04/21/JS-Date-Object/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
